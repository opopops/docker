name: docker-publish
description: "Publish a Docker container image."

inputs:
  context:
    description: "The path to the Docker build context."
    required: true
  file:
    description: "The path to the Dockerfile."
    required: true
    default: "Dockerfile"
  target:
    description: "The target to build the Docker image for."
    required: false
    default: ""
  tag:
    description: "The tag to publish the container image with."
    required: true
  platforms:
    description: "The platforms to build the container image for."
    required: false
    default: "linux/amd64,linux/arm64"
  dockerhub-username:
    description: "The username to authenticate with the Docker Hub container registry."
    required: true
  dockerhub-password:
    description: "The password to authenticate with the Docker Hub container registry."
    required: true
  scan:
    description: "Whether to scan the container image for vulnerabilities."
    required: false
    default: "true"
  scan-severity-cutoff:
    description: "The severity of vulnerabilities that should cause the scan to fail."
    required: false
    default: "critical"
  cosign:
    description: "Whether to sign the container image."
    required: false
    default: "true"
  cosign-password:
    description: "The password to sign the container image with."
    required: false
  cosign-private-key:
    description: "The private key to sign the container image with."
    required: false
  cosign-public-key:
    description: "The public key to verify the container image with."
    required: false

runs:
  using: "composite"
  steps:
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - uses: imjasonh/setup-crane@v0.4

    - if: ${{ inputs.cosign == 'true' }}
      uses: sigstore/cosign-installer@v3

    - uses: docker/login-action@v3
      id: login-to-github
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - uses: docker/login-action@v3
      id: login-to-docker-hub
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-password }}

    - uses: docker/build-push-action@v6
      id: publish
      with:
        context: ${{ inputs.context }}
        file: ${{ inputs.file }}
        target: ${{ inputs.target }}
        platforms: ${{ inputs.platforms }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        push: true
        tags: |
          ghcr.io/${{ inputs.tag }}

    - id: crane
      shell: bash
      run: |
        crane cp ghcr.io/${{ inputs.tag }}@${{ steps.publish.outputs.digest }} docker.io/${{ inputs.tag }}

    - if: ${{ inputs.scan == 'true' }}
      uses: anchore/scan-action@v6
      id: scan
      with:
        image: ghcr.io/${{ inputs.tag }}@${{ steps.publish.outputs.digest }}
        fail-build: "true"
        severity-cutoff: ${{ inputs.scan-severity-cutoff }}

    - if: ${{ inputs.cosign == 'true' }}
      shell: bash
      id: cosign
      env:
        COSIGN_PASSWORD: ${{ inputs.cosign-password }}
        COSIGN_PRIVATE_KEY: ${{ inputs.cosign-private-key }}
        COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
        COSIGN_YES: "true"
      run: |
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY ghcr.io/${{ inputs.tag }}@${{ steps.publish.outputs.digest }}
        cosign verify --key env://COSIGN_PUBLIC_KEY ghcr.io/${{ inputs.tag }}@${{ steps.publish.outputs.digest }}