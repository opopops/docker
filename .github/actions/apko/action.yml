name: apko-publish
description: "Publish an APKO container image."

inputs:
  config:
    description: "Path to the APKO configuration file."
    required: true
  image:
    description: "The image name to publish."
    required: true
  tag:
    description: "The image tag to publish."
    required: true
  packages:
    description: "Additional packages"
    required: false
    default: ""
  archs:
    description: "The architectures to build the container image for."
    required: false
    default: "amd64,arm64"
  sbom-path:
    description: "path to write the SBOMs"
    required: false
    default: ${{ github.workspace }}/sbom

outputs:
  ref:
    value: ${{ steps.apko.outputs.digest }}
    description: "The full qualified digest of the published container image."
  digest:
    description: "The digest of the published container image."
    value: ${{ steps.crane.outputs.digest }}
  digest-amd64:
    description: "The digest of the published container image for amd64 arch."
    value: ${{ steps.crane.outputs.digest-adm64 }}
  digest-arm64:
    description: "The digest of the published container image for arm64 arch."
    value: ${{ steps.crane.outputs.digest-arm64 }}


runs:
  using: "composite"
  steps:
    - uses: imjasonh/setup-crane@v0.4

    - name: Create SBOMs directory
      id: output
      shell: bash
      run: |
        mkdir -p ${{ inputs.sbom-path }}

    - uses: distroless/actions/apko-publish@main
      id: apko
      with:
        config: ${{ inputs.config }}
        tag: ghcr.io/${{ inputs.image }}:${{ inputs.tag }}
        package-append: ${{ inputs.packages }}
        archs: ${{ inputs.archs }}
        sbom-path: ${{ inputs.sbom-path }}

    - id: crane
      shell: bash
      run: |
        crane cp ${{ steps.apko.outputs.digest }} docker.io/${{ inputs.image }}:${{ inputs.tag }}
        echo "digest=$(crane digest ghcr.io//${{ inputs.image }}:${{ inputs.tag }})" >> $GITHUB_OUTPUT

        if [[ "${{ inputs.archs }}" == *"amd64"* ]]; then
            echo "digest-amd64=$(crane digest --platform=linux/amd64 ghcr.io//${{ inputs.image }}:${{ inputs.tag }})" >> $GITHUB_OUTPUT
        else
            echo "digest-amd64=''" >> $GITHUB_OUTPUT
        fi

        if [[ "${{ inputs.archs }}" == *"arm64"* ]]; then
            echo "digest-arm64=$(crane digest --platform=linux/arm64 ghcr.io//${{ inputs.image }}:${{ inputs.tag }})" >> $GITHUB_OUTPUT
        else
            echo "digest-arm64=''" >> $GITHUB_OUTPUT
        fi
