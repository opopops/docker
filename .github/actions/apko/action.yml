name: apko-publish
description: "Publish an APKO container image."

inputs:
  config:
    description: "Path to the APKO configuration file."
    required: false
  tag:
    description: "The tag to publish the container image with."
    required: false
  archs:
    description: "The architectures to build the container image for."
    required: false
    default: "x86_64,aarch64"
  dockerhub-username:
    description: "The username to authenticate with the Docker Hub container registry."
    required: true
  dockerhub-password:
    description: "The password to authenticate with the Docker Hub container registry."
    required: true
  scan:
    description: "Whether to scan the container image for vulnerabilities."
    required: false
    default: "true"
  scan-fail-build:
    description: "Whether to fail the build if vulnerabilities are found."
    required: false
    default: "false"
  scan-severity-cutoff:
    description: "The severity of vulnerabilities that should cause the scan to fail."
    required: false
    default: "high"
  sign:
    description: "Whether to sign the container image."
    required: false
    default: "true"
  cosign-password:
    description: "The password to sign the container image with."
    required: false
  cosign-private-key:
    description: "The private key to sign the container image with."
    required: false
  cosign-public-key:
    description: "The public key to verify the container image with."
    required: false

outputs:
  digest:
    value: ${{ steps.apko.outputs.digest }}
    description: |
      The digest of the published container image.

runs:
  using: "composite"
  steps:
    - uses: imjasonh/setup-crane@v0.4

    - if: ${{ inputs.sign == 'true' }}
      uses: sigstore/cosign-installer@v3

    - uses: docker/login-action@v3
      id: login-to-github
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ github.token }}

    - uses: docker/login-action@v3
      id: login-to-docker-hub
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-password }}

    - uses: distroless/actions/apko-publish@main
      id: apko
      with:
        config: ${{ inputs.config }}
        tag: ghcr.io/${{ inputs.tag }}
        archs: ${{ inputs.archs }}

    - id: crane
      shell: bash
      run: |
        crane cp ${{ steps.apko.outputs.digest }} docker.io/${{ inputs.tag }}

    - if: ${{ inputs.scan == 'true' }}
      uses: anchore/scan-action@v6
      id: scan
      with:
        image: ${{ steps.apko.outputs.digest }}
        fail-build: ${{ inputs.scan-fail-build }}
        severity-cutoff: ${{ inputs.scan-severity-cutoff }}

    - if: ${{ inputs.scan == 'true' }}
      uses: github/codeql-action/upload-sarif@v3
      id: scan-report
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - if: ${{ inputs.sign == 'true' }}
      shell: bash
      id: cosign
      env:
        COSIGN_PASSWORD: ${{ inputs.cosign-password }}
        COSIGN_PRIVATE_KEY: ${{ inputs.cosign-private-key }}
        COSIGN_PUBLIC_KEY: ${{ inputs.cosign-public-key }}
        COSIGN_YES: "true"
      run: |
        cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ steps.apko.outputs.digest }}
        cosign verify --key env://COSIGN_PUBLIC_KEY ${{ steps.apko.outputs.digest }}
